name: Test SACCHARIS Conda Package

on: 
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:
    

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Install system dependencies
      run: |
        sudo apt-get update -y && sudo apt-get install -y libcurl4-openssl-dev
        sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev # required for proper devtools install
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.1'
    - name: Install rsaccharis and dependencies
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      run: |
        Rscript -e 'install.packages("BiocManager", repos = "http://cran.us.r-project.org")' -e 'if (!require("BiocManager", quietly = TRUE)) install.packages("BiocManager");BiocManager::install()' -e 'BiocManager::install(c("remotes", "saccharis/rsaccharis"), dependencies=TRUE)'
        #        'BiocManager::install(c("jsonlite", "ape", "stringr", "magicfor", "knitr", "dplyr", "magrittr",
        "RColorBrewer", "ggnewscale", "ggplot2", "ggtree"))'
        #        Rscript -e 'library("devtools")' -e 'devtools::install_github(saccharis/rsaccharis)'
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'        
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install conda dependencies
      run: |
        conda config --add channels defaults
        conda config --add channels bioconda
        conda config --add channels conda-forge
        conda env update --file environment.yml --name base
    - name: Build and install SACCHARIS
      run: |
        conda install conda-build

        conda build .
        conda install --use-local saccharis
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda install pytest
        pytest tests_package
    - name: Upload build artifact
      uses: actions/upload-artifact@v1
      if: ${{ !cancelled() }}
      with:
        name: artifact-all
        path: /home/runner/work/
        retention-days: 5
